/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package eagleeye;

import static eagleeye.EagleEye.ee;
import static eagleeye.SQLObject.*;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author aftab
 */
public class SignUpPage extends javax.swing.JFrame {

     private String sirName;
     private String fullName;
     private String password;
     private String confirmPassword;
     private Date dateOfBirth;
     private int gender;
     private boolean isAdminValue; 
     private Image userImage;
     private byte[] imageBytes;
     public boolean isImageTaken = false;
     
     private PreparedStatement ps;
     
     private String yearsForCombo[];
     
     
    /**
     * Creates new form SignUpPage
     */
    public SignUpPage() {
        yearsForCombo = new String[100];
        for(int i=0;i<100;i++)
        {
            yearsForCombo[i]=String.valueOf(i+1916);
        }
        initComponents();
        this.setLocationRelativeTo(null);
    }
     
    public void setUserImage(Image image)
    {
        this.userImage = image;
        imageLabel.setIcon(new ImageIcon(userImage.getScaledInstance(150, 150, 4)));
        this.isImageTaken = true;
        revalidate();
        repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        SignUpMainPanel = new javax.swing.JPanel();
        logoLabel = new javax.swing.JLabel();
        SignUpContainerPanel = new javax.swing.JPanel();
        SirNameLabel = new javax.swing.JLabel();
        sirNameField = new javax.swing.JTextField();
        fullNameLabel = new javax.swing.JLabel();
        fullNameField = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();
        dateOfBirthLabel = new javax.swing.JLabel();
        dateOfBirthLabel1 = new javax.swing.JLabel();
        radioMale = new javax.swing.JRadioButton();
        radioFemale = new javax.swing.JRadioButton();
        dateOfBirthLabel2 = new javax.swing.JLabel();
        isAdmin = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        imageLabel = new javax.swing.JLabel();
        dateOfBirthLabel3 = new javax.swing.JLabel();
        takeNewButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        dateOfBirthMonth = new javax.swing.JComboBox<>();
        dateOfBirthDay = new javax.swing.JComboBox<>();
        dateOfBirthYear = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        signUpButton = new javax.swing.JButton();
        AftabKhalil = new javax.swing.JLabel();
        DeviceConnected = new javax.swing.JPanel();

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Eagle Eye ...");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        SignUpMainPanel.setBackground(new java.awt.Color(0, 0, 0));

        logoLabel.setIcon(new javax.swing.ImageIcon("E:\\EagleEye\\R\\logoPic.png")); // NOI18N

        SignUpContainerPanel.setBackground(new java.awt.Color(0, 0, 0));

        SirNameLabel.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        SirNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        SirNameLabel.setText("Sir Name:");

        sirNameField.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        sirNameField.setMargin(new java.awt.Insets(0, 2, 0, 2));
        sirNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sirNameFieldActionPerformed(evt);
            }
        });

        fullNameLabel.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        fullNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        fullNameLabel.setText("Full Name:");

        fullNameField.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        fullNameField.setMargin(new java.awt.Insets(0, 2, 0, 2));

        passwordLabel.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password:");

        confirmPasswordLabel.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        confirmPasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        confirmPasswordLabel.setText("C.Password:");

        passwordField.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        confirmPasswordField.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N

        dateOfBirthLabel.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        dateOfBirthLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel.setText("Date Of Birth:");

        dateOfBirthLabel1.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        dateOfBirthLabel1.setForeground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel1.setText("Gender:");

        buttonGroup1.add(radioMale);
        radioMale.setSelected(true);
        radioMale.setText("Male");

        buttonGroup1.add(radioFemale);
        radioFemale.setText("Female");

        dateOfBirthLabel2.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        dateOfBirthLabel2.setForeground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel2.setText("Is Admin:");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        imageLabel.setBackground(new java.awt.Color(0, 0, 0));
        imageLabel.setIcon(new javax.swing.ImageIcon("E:\\EagleEye\\R\\user.png")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        dateOfBirthLabel3.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        dateOfBirthLabel3.setForeground(new java.awt.Color(255, 255, 255));
        dateOfBirthLabel3.setText("User Pic:");

        takeNewButton.setText("Take New");
        takeNewButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        takeNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeNewButtonActionPerformed(evt);
            }
        });

        uploadButton.setText("Upload");
        uploadButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        dateOfBirthMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jan", "Feb", "Mar", "Aprl", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        dateOfBirthMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateOfBirthMonthActionPerformed(evt);
            }
        });

        dateOfBirthDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        dateOfBirthYear.setModel(new DefaultComboBoxModel(yearsForCombo));

        javax.swing.GroupLayout SignUpContainerPanelLayout = new javax.swing.GroupLayout(SignUpContainerPanel);
        SignUpContainerPanel.setLayout(SignUpContainerPanelLayout);
        SignUpContainerPanelLayout.setHorizontalGroup(
            SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(SirNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(confirmPasswordLabel)
                    .addComponent(dateOfBirthLabel)
                    .addComponent(fullNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOfBirthLabel1)
                    .addComponent(dateOfBirthLabel2)
                    .addComponent(dateOfBirthLabel3))
                .addGap(27, 27, 27)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                            .addComponent(radioMale, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addComponent(radioFemale))
                        .addComponent(isAdmin)
                        .addComponent(sirNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(fullNameField)
                        .addComponent(passwordField)
                        .addComponent(confirmPasswordField)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignUpContainerPanelLayout.createSequentialGroup()
                            .addComponent(uploadButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(takeNewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                            .addComponent(dateOfBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dateOfBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dateOfBirthYear, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        SignUpContainerPanelLayout.setVerticalGroup(
            SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SirNameLabel)
                    .addComponent(sirNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullNameLabel)
                    .addComponent(fullNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPasswordLabel))
                .addGap(50, 50, 50)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOfBirthLabel)
                    .addComponent(dateOfBirthMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOfBirthDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOfBirthYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioMale)
                    .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dateOfBirthLabel1)
                        .addComponent(radioFemale)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dateOfBirthLabel2)
                    .addComponent(isAdmin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                        .addComponent(dateOfBirthLabel3)
                        .addContainerGap())
                    .addGroup(SignUpContainerPanelLayout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(SignUpContainerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(takeNewButton)
                            .addComponent(uploadButton)))))
        );

        backButton.setText("< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        signUpButton.setText("Sign Up");
        signUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpButtonActionPerformed(evt);
            }
        });

        AftabKhalil.setForeground(new java.awt.Color(255, 255, 255));
        AftabKhalil.setText("Made By: Aftab Khalil, B14158002");

        DeviceConnected.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout DeviceConnectedLayout = new javax.swing.GroupLayout(DeviceConnected);
        DeviceConnected.setLayout(DeviceConnectedLayout);
        DeviceConnectedLayout.setHorizontalGroup(
            DeviceConnectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        DeviceConnectedLayout.setVerticalGroup(
            DeviceConnectedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout SignUpMainPanelLayout = new javax.swing.GroupLayout(SignUpMainPanel);
        SignUpMainPanel.setLayout(SignUpMainPanelLayout);
        SignUpMainPanelLayout.setHorizontalGroup(
            SignUpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(logoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(SignUpContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
            .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                .addGap(313, 313, 313)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signUpButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignUpMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DeviceConnected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AftabKhalil, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        SignUpMainPanelLayout.setVerticalGroup(
            SignUpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignUpMainPanelLayout.createSequentialGroup()
                .addGroup(SignUpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DeviceConnected, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                        .addGroup(SignUpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(SignUpContainerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SignUpMainPanelLayout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(logoLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                        .addGroup(SignUpMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(signUpButton)
                            .addComponent(backButton))
                        .addGap(51, 51, 51)
                        .addComponent(AftabKhalil)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SignUpMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SignUpMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void signUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpButtonActionPerformed
    
     boolean inValid = false;
        
     sirName = this.sirNameField.getText();
     if(!sirName.matches("[A-Z]{1}[a-z]*"))
    {
         JOptionPane.showMessageDialog(this, "Invalid Sir Name\nIt Should Be Of The Form \"Abc\".", "Error In Sir Name", ERROR_MESSAGE);
         inValid = true;
    }

     fullName = this.fullNameField.getText();
     if(fullName.matches("[A-Z]{1}[a-z]+") || fullName.matches("[A-Z]{1}[a-z]+[\\s][A-Z]{1}[a-z]+"))
    {
         
    }
     else
    {
         if(inValid == false)
        {
             JOptionPane.showMessageDialog(this, "Invalid Full Name\nIt Should Be Of The Form \"Abcd\".\nOr It Should Be Of The Form \"Abcd Efgh\"", "Error In Sir Name", ERROR_MESSAGE);
        }
         inValid = true;
    }
     
     password = this.passwordField.getText();
     if(!password.matches("(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=])(?=\\S+$).{8,}"))
    {
         if(inValid==false)
        {
             JOptionPane.showMessageDialog(this, "The password policy is:\n" +
                                                 "At least 8 chars\n" +
                                                 "Contains at least one digit\n" +
                                                 "Contains at least one lower alpha char and one upper alpha char\n" +
                                                 "Contains at least one char within a set of special chars (@#%$^ etc.)\n" +
                                                 "Does not contain space, tab, etc.", "Error In Password", ERROR_MESSAGE);
        }
         inValid = true;
    }
     
     confirmPassword = this.confirmPasswordField.getText();
     if(!confirmPassword.equals(password))
    {
        if(inValid == false)
        {
          JOptionPane.showMessageDialog(null,"ConfirmPassword Doesn't Equal to Password","ConfirmPassword Error",ERROR_MESSAGE);
        }
        inValid = true;
    }
         
     dateOfBirth = new Date();
     dateOfBirth.setYear(this.dateOfBirthYear.getSelectedIndex()+16);
     dateOfBirth.setMonth(this.dateOfBirthMonth.getSelectedIndex());
     dateOfBirth.setDate(this.dateOfBirthDay.getSelectedIndex()+1);
    
     if(this.radioMale.isSelected())
    {
        gender = 0;
    }
     else
    {
        gender = 1;
    }
     
     if(this.isAdmin.isSelected())
    {
         isAdminValue = true;
    }
     else
    {
         isAdminValue = false;
    }
      if(inValid == true)
      {
          return;
      }
     if(isImageTaken == true)
    {
         ByteArrayOutputStream baos = new ByteArrayOutputStream();
         try {
             ImageIO.write((BufferedImage) userImage,"jpg", baos);
         } catch (IOException ex) {
             Logger.getLogger(SignUpPage.class.getName()).log(Level.SEVERE, null, ex);
         }
         imageBytes = baos.toByteArray();
    }
     else
    {
        
                 JOptionPane.showMessageDialog(this, "Please Take or upload a Photo!", "Picture Please", ERROR_MESSAGE);
            
             inValid = true;
        
    }
     String genderString ;
     if(gender==0)
     {
         genderString = "Male";
     }
     else
     {
         genderString = "Female";
     }
     
     if(inValid == false)
     {
         String month = null;
         switch(dateOfBirth.getMonth())
         {
             case 0: month = "January";break;
             case 1: month = "February";break;
             case 2: month = "March";break;
             case 3: month = "April";break;
             case 4: month = "May";break;
             case 5: month = "June";break;
             case 6: month = "July";break;
             case 7: month = "August";break;
             case 8: month = "September";break;
             case 9: month = "October";break;
             case 10: month = "November";break;
             case 11: month = "December";break;
         }
                
         String finals = "The Inputs are:\n"+
                         "Sir Name : "+sirName+" \n"+
                         "Full Name : "+fullName+" \n"+
                         "Date Of Birth: Day = "+dateOfBirth.getDate()+" Month = "+month+" Year = "+(dateOfBirth.getYear()+1900)+" \n"+
                         "Gender : "+genderString+" \n"+
                         "Admin Status : "+isAdminValue+" .";
     
         int a = JOptionPane.showConfirmDialog(this,finals,"Proceed?", YES_NO_OPTION,QUESTION_MESSAGE);
         if(a==0)
        {
             int n=0;
             int ad=0;
             if(isAdminValue==true)
             {
                 ad=1;
             }
             try
            {
                     ee.sql.rs = ee.sql.stmnt.executeQuery("SELECT * FROM [UserTable]");
                     while(ee.sql.rs.next())
                {
                     n++;
                }
            }catch (SQLException ex)
            {
                 Logger.getLogger(SignUpPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
             try
            {
                 java.sql.Date d = new java.sql.Date(dateOfBirth.getTime());
                 
                                ps = ee.sql.con.prepareStatement("INSERT INTO [UserTable] "
                                                +"VALUES(?,?,?,?,?,?,?,?)");
                ps.setString(1, "EE"+String.valueOf(n));
                ps.setString(2, sirName);
                ps.setString(3, fullName);
                ps.setString(4, password);
                ps.setDate(5, d);
                ps.setInt(6, gender);
                ps.setInt(7,ad);
                ps.setBytes(8, imageBytes);
                
                
                int result = ps.executeUpdate();
                System.out.println(result);
            } catch (SQLException ex)
            {
                 Logger.getLogger(SignUpPage.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             JOptionPane.showMessageDialog(this, "Your User_Id is EE"+n+"\nKeep Remember Your Id and Password for Next LogIn.","SignUp Sucessfull!",INFORMATION_MESSAGE);
             ee.lp.setUser("EE"+n);
             ee.sup.setVisible(false);
             ee.sup.dispose();
             ee.lp.setVisible(true);
        }
        }
    }//GEN-LAST:event_signUpButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        JOptionPane.showMessageDialog(this,"The qpplication will continue to work in the background.","I am not closing!",INFORMATION_MESSAGE);
        ee.sup.setVisible(false);
        ee.sup.dispose();
        ee.mf.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
       ee.sup.setVisible(false);
       ee.fp.setVisible(true);
       ee.fp.setEnabled(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileNameExtensionFilter("Images","jpg","png","gif","jpeg"));
        int rValue = jf.showOpenDialog(this);
        if(rValue == JFileChooser.APPROVE_OPTION)
        {
             File f = jf.getSelectedFile();
             try
            {
                 Image im = ImageIO.read(f);
                 userImage = im;
                 imageLabel.setIcon(new ImageIcon(userImage.getScaledInstance(150, 150, 4)));
                 this.isImageTaken = true;
            }
             catch (Exception ex)
            {
                 JOptionPane.showMessageDialog(this, "Unable to Read the Selected Image\nPlease Select Another.","ERROR IN IMAGE",ERROR_MESSAGE);
            }  
            
             revalidate();
             repaint();
        }
    }//GEN-LAST:event_uploadButtonActionPerformed

    private void sirNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sirNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sirNameFieldActionPerformed

    private void dateOfBirthMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOfBirthMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOfBirthMonthActionPerformed

    private void takeNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeNewButtonActionPerformed
        this.setEnabled(false);
        
        try{
        new CameraPage();
        }catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "No webcam has been detected!\nConnect a Webcam first","No webcam",ERROR_MESSAGE);
            this.setEnabled(true);
        }
    }//GEN-LAST:event_takeNewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AftabKhalil;
    public javax.swing.JPanel DeviceConnected;
    private javax.swing.JPanel SignUpContainerPanel;
    private javax.swing.JPanel SignUpMainPanel;
    private javax.swing.JLabel SirNameLabel;
    private javax.swing.JButton backButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPasswordField confirmPasswordField;
    private javax.swing.JLabel confirmPasswordLabel;
    private javax.swing.JComboBox<String> dateOfBirthDay;
    private javax.swing.JLabel dateOfBirthLabel;
    private javax.swing.JLabel dateOfBirthLabel1;
    private javax.swing.JLabel dateOfBirthLabel2;
    private javax.swing.JLabel dateOfBirthLabel3;
    private javax.swing.JComboBox<String> dateOfBirthMonth;
    private javax.swing.JComboBox<String> dateOfBirthYear;
    private javax.swing.JTextField fullNameField;
    private javax.swing.JLabel fullNameLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JCheckBox isAdmin;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel logoLabel;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JButton signUpButton;
    private javax.swing.JTextField sirNameField;
    private javax.swing.JButton takeNewButton;
    private javax.swing.JButton uploadButton;
    // End of variables declaration//GEN-END:variables
}
